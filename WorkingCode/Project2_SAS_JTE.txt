*Import Data;
proc import out=work.bankraw
datafile="\\smu.edu\Files\users$\jeysenbach\Apps.SMU\Desktop\SAS\bank-additional-full.csv"
DBMS= csv replace;
getnames=yes;
datarow=2;

*Rename "y" to "Subscription";
data bankraw;
set bankraw;
rename y = Subscription;
run;

*Separate Yes and No observations into datasets for partitioning into a training and test set;
*The goal is to get a training set that has approx equal yes and no responses for logistic regression analysis;
data bankraw_no;
set bankraw;
if Subscription='no';
row = _n_;
run;

data bankraw_yes;
set bankraw;
if Subscription='ye';
row = _n_;
run;

*There are 36548 No and 4640 Yes.;
*Below will randomly select about half of the yes observations and an appox equal number of no observations;

data banktrain_no banktest_no;
set bankraw_no;
by row;
if first.row then do;
	if ranuni(1234) < .065 then destination = 'banktrain_no';
	else destination = 'banktest_no';
	retain destination;
end;
if destination = 'banktrain_no' then output banktrain_no;
else output banktest_no;
drop destination;
run;

data banktrain_yes banktest_yes;
set bankraw_yes;
by row;
if first.row then do;
	if ranuni(1234) < .5 then destination = 'banktrain_yes';
	else destination = 'banktest_yes';
	retain destination;
end;
if destination = 'banktrain_yes' then output banktrain_yes;
else output banktest_yes;
drop destination;
run;

data banktrain;
set banktrain_yes banktrain_no;
run;

data banktest;
set banktest_yes banktest_no;
run;


*This will calculate predictions for both the training and test sets with the "score" option;
proc logistic data=banktrain plots=ROC;
class Subscription job education default month poutcome / param=ref;
model Subscription(event='ye') =  job education default month poutcome age cons_conf_idx euribor3m / scale=none aggregate lackfit outroc=trainroc;
output out=trainpreds;
score data=banktest out=testpreds outroc=testroc fitstat;
run;


*This will prpduce ROC curves with different variables omitted;
proc logistic data=banktrain;
class Subscription job education default month poutcome / param=ref;
model Subscription(event='ye') =  job education default month poutcome age cons_conf_idx euribor3m / scale=none aggregate lackfit outroc=trainroc;
output out=trainpreds;
score data=banktest out=testpreds outroc=testroc fitstat;
roc 'model 1' job education default;
roc 'model 2' month poutcome age;
roc 'model 3' cons_conf_idx euribor3m;
roc 'model 4' job education default month poutcome age;
roc 'full model' job education default month poutcome age cons_conf_idx euribor3m ;
roccontrast reference('model 3') /estimate ;
run;



*Ignore this for now...;
proc plm source=train_logit;
score data=banktest out=test_scored predicted=p / ilink;
run;
data test_scored;
set test_scored;
if p > 0.5 then Subscription_pred = 1;
else Subscription_pred = 0;
run;
